<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!--DOCTYPE MAN SYSTEM "../../manrev.dtd"-->
<?xml-stylesheet type="text/xsl" href="scilab_rev.xsl"?>

<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE> ideal_dm_transform  </TITLE>
  <TYPE>Scilab Function  </TYPE>
  <DATE> May, 2006 </DATE>
  <SHORT_DESCRIPTION name="ideal_dm_transform"> transforms a wavefront by an ideal deformable mirror.  </SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>[dwf_out]=ideal_dm_transform(dwf_in,dm)  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
 <PARAM_INDENT>
  <PARAM_ITEM>
  <PARAM_NAME>dwf_in  </PARAM_NAME>
  <PARAM_DESCRIPTION>
          <SP>:input field.it must be diffractive wavefront. </SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>dm  </PARAM_NAME>
  <PARAM_DESCRIPTION>
          <SP>: the deformable mirror.</SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
  <PARAM_ITEM>
  <PARAM_NAME>dwf_out  </PARAM_NAME>
  <PARAM_DESCRIPTION>
          <SP>: the output field or diffractive wavefront. </SP>
  </PARAM_DESCRIPTION> 
  </PARAM_ITEM>
 </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
  <P>
    transforms a wavefront by an ideal deformable mirror. To perform the transformation 
    on a wavefront, this function uses the actuator velocities to interpolate to the 
    timestamp of the wavefront. The transformation is effected by applying the moving 
    the actuator positions and substracting it from the wavefront phase.
    Supplying a wavefront with a timestamp that precedes the internal one is an error. 
  </P>
  </DESCRIPTION>
  <EXAMPLE><![CDATA[
	number=128;wavelength=1e-6;pixscl=0.1;

	tp=three_point(0,0,0);tf=three_frame();
	tv_reflect=three_vector(0,0,1);
	tf=three_reflection(tf,tp,tv_reflect);
	dwfh=wavefront_header(wavelength,pixscl,number,number,tf);
	dwfh=set_dwfh_timestamp(dwfh,1);
	emt=emitter(0,0,0,1);dwf=pl_wave(dwfh,emt);
	
	ap=circle(12);
	act_dim=16;act_pitch=1;act_vel=1e-4;
	act=actuator_array(act_dim,act_dim,act_pitch,act_vel);
	dm=ideal_dm(ap,act);

	sgn=-1;actuator_command_meters=0.5e-6;
	command=[];
	for i=1:act_dim
		sgn=-1*sgn;
		for j=1:act_dim
			sgn=-1*sgn;
			command=[command,sgn*actuator_command_meters];
		end
	end  
	dm_command=pixel_array(act_dim);
	dm_command=set_pix_arr_data(dm_command,command);
	dm=dm_update(dm,dm_command,0.01);
	
	dwf=ideal_dm_transform(dwf,dm);
	field_plot(dwf);
 ]]></EXAMPLE>
  <AUTHOR> 
    <AUTHORS_ITEM>  Chen jingyuan,  </AUTHORS_ITEM>
    <AUTHORS_ITEM>  Gan guangyong (IAPCM, Beijing,China.)  </AUTHORS_ITEM>
  </AUTHOR>
  <SEE_ALSO>
    <SEE_ALSO_ITEM> <LINK PATH="./">ideal_dm</LINK> </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM> <LINK PATH="./">dm_update</LINK> </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM> <LINK PATH="./">set_dm_timestamp</LINK> </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM> <LINK PATH="../optics_scicos/">df_mirror</LINK> </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
